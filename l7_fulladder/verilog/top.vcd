$date
	Thu Oct 10 10:04:39 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module four_bit_adder_tb $end
$var wire 1 ! O_CA $end
$var wire 4 " C [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % I_CA $end
$scope module fba $end
$var wire 1 % i_CA $end
$var wire 4 & i_a [3:0] $end
$var wire 4 ' i_b [3:0] $end
$var wire 4 ( o_c [3:0] $end
$var wire 1 ! o_CA $end
$var wire 1 ) fa_wire3 $end
$var wire 1 * fa_wire2 $end
$var wire 1 + fa_wire1 $end
$scope module fa1 $end
$var wire 1 , i_bit1 $end
$var wire 1 - i_bit2 $end
$var wire 1 % i_carry $end
$var wire 1 + o_carry $end
$var wire 1 . o_sum $end
$var wire 1 / w_WIRE_1 $end
$var wire 1 0 w_WIRE_2 $end
$var wire 1 1 w_WIRE_3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 i_bit1 $end
$var wire 1 3 i_bit2 $end
$var wire 1 + i_carry $end
$var wire 1 * o_carry $end
$var wire 1 4 o_sum $end
$var wire 1 5 w_WIRE_1 $end
$var wire 1 6 w_WIRE_2 $end
$var wire 1 7 w_WIRE_3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 8 i_bit1 $end
$var wire 1 9 i_bit2 $end
$var wire 1 * i_carry $end
$var wire 1 ) o_carry $end
$var wire 1 : o_sum $end
$var wire 1 ; w_WIRE_1 $end
$var wire 1 < w_WIRE_2 $end
$var wire 1 = w_WIRE_3 $end
$upscope $end
$scope module fa4 $end
$var wire 1 > i_bit1 $end
$var wire 1 ? i_bit2 $end
$var wire 1 ) i_carry $end
$var wire 1 ! o_carry $end
$var wire 1 @ o_sum $end
$var wire 1 A w_WIRE_1 $end
$var wire 1 B w_WIRE_2 $end
$var wire 1 C w_WIRE_3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
14
03
02
11
00
0/
0.
1-
1,
1+
0*
0)
b10 (
b1 '
b1 &
0%
b1 $
b1 #
b10 "
0!
$end
