$date
	Wed Nov 20 15:12:20 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module average $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 4 # x [3:0] $end
$var wire 1 $ x_load $end
$var reg 4 % x1 [3:0] $end
$var reg 6 & x12 [5:0] $end
$var reg 4 ' x2 [3:0] $end
$var reg 4 ( x3 [3:0] $end
$var reg 6 ) x34 [5:0] $end
$var reg 4 * x4 [3:0] $end
$var reg 6 + y [5:0] $end
$upscope $end
$scope module divider_tb $end
$var wire 8 , c [7:0] $end
$var reg 4 - a [3:0] $end
$var reg 4 . b [3:0] $end
$var reg 1 / clk $end
$scope module div $end
$var wire 4 0 a [3:0] $end
$var wire 4 1 b [3:0] $end
$var wire 1 / clk $end
$var reg 8 2 c [7:0] $end
$var reg 8 3 y0 [7:0] $end
$var reg 8 4 y1 [7:0] $end
$var reg 8 5 y2 [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 5
bx 4
bx 3
bx 2
b100 1
b100 0
x/
b100 .
b1000 -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
z$
bz #
z"
z!
$end
